# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: 
    - "2023"

  pull_request:
    branches:
    - feature/*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create minified build directory
        run: mkdir -p build
        
      - name: Copy source files to build directory
        run: cp -r . build/
        
      - name: Minify HTML, CSS, and JS files
        uses: nizarmah/auto-minify@v3.0.0
        with:
          directory: 'build'
          overwrite: true
          js_engine: 'uglify-js'
          css_engine: 'clean-css'
          
      - name: Update HTML links to point to minified files
        run: |
          # Update CSS and JS links in HTML files to point to minified versions
          find build -name "*.html" -type f -exec sed -i 's/\.css/.min.css/g; s/\.js/.min.js/g' {} \;
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload minified build directory
          path: 'build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
